openapi: 3.0.3
info:
  version: 1.0.0
  title: "Mission Control Assets API Specification"
  description: >
    Mission Control Assets API specification
  contact:
    name: Mission Control team
    url: http://portal.mcx.open-systems.com
    email: support@mcx.open-systems.com
  x-audience: component-internal
  x-api-id: a975e63e-6933-48de-a7f2-eeae5edfa551

servers:
  - url: 'https://api.alpha-rome.dev'
    description: ALPHA
  - url: 'https://api.beta-rome.dev'
    description: BETA
  - url: 'https://api.gamma-rome.dev'
    description: GAMMA
  - url: 'https://api.mcx.open-systems.com'
    description: PROD

tags:
  - name: assets
    description: Everything about customer assets
  - name: customers
    description: Everything about customers

paths:
  /v1/customers/{id}:
    get:
      tags:
        - customers
      summary: Get customer information
      operationId: get-customer-id
      description: >
        Get the customer info for a given id
        This information comes from the customer onboarding
      security:
        - BearerAuth: [ mdr.assets.read ]
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomerDataMessage'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/unknown'

  /v1/customers:
    get:
      tags:
        - customers
      summary: Get list of all customers
      operationId: get-all-customers
      description: >
        Get the customers info
        This information comes from the customer onboarding
      security:
        - BearerAuth: [ mdr.assets.read ]
      responses:
        '200':
          description: The OK response
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomerListDataMessage'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        default:
          $ref: '#/components/responses/unknown'

  /v1/customers/{id}/qualys-assets:
    get:
      tags:
        - assets
      operationId: get-customers-id-qualys-assets
      description: >
        Gets Qualys assets for a given customer and loads the assets into the Asset DB
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - BearerAuth: [ mdr.assets.read ]
      responses:
        '200':
          description: Successfully processed the request but no assets added for the customer
          content:
            application/vnd.api+json:
              schema:
                type: string
        '201':
          description: Assets added for customer
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AssetGetResponseMessage'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'

  /v1/customers/{id}/assets:
    get:
      tags:
        - assets
      operationId: get-customers-id-assets
      description: >
        Get the customers info
        This information comes from the customer onboarding
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/page_offset'
        - $ref: '#/components/parameters/filter'
      security:
        - BearerAuth: [ mdr.assets.read ]
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AssetListDataMessage'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'

    patch:
      tags:
        - assets
      operationId: patch-customers-id-assets
      parameters:
        - $ref: '#/components/parameters/id'
      summary: Update customer assets
      description: >
        Update customer assets
      security:
        - BearerAuth: [ mdr.assets.write ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetDataMessage'
      responses:
        '200':
          description: Valid request - No changes made
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AssetOkResponseMessage'
        '202':
          description: Request accepted - List of assets changes by id/field
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AssetAcceptedResponseMessage'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'

    put:
      tags:
        - assets
      operationId: put-customers-id-assets
      parameters:
        - $ref: '#/components/parameters/id'
      summary: Add or insert customer assets
      description: >
        Create customer assets
      security:
        - BearerAuth: [ mdr.assets.write ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetDataMessage'
      responses:
        '200':
          description: Valid request - No changes made
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AssetOkResponseMessage'

        '202':
          description: Request accepted - List of asset changes by id/field
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AssetAcceptedResponseMessage'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'


  /v1/customers/{id}/assets-info:
    get:
      tags:
        - assets
      summary: Get customer assets info
      description: >
        Get customer assets info
      operationId: get-customers-id-assetsinfo
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - BearerAuth: [ mdr.assets.read ]
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AssetInfoListDataMessage'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'

    post:
      tags:
        - assets
      summary: Create customer assets info
      description: >
        Create customer assets info
      operationId: post-customers-id-assetsinfo
      parameters:
        - $ref: '#/components/parameters/id'
      security:
        - BearerAuth: [ mdr.assets.write ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsInfoPostDataMessage'
      responses:
        '201':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AssetInfoDataMessage'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'

  /v1/customers/{id}/assets/parse:
    put:
      tags:
        - assets
      operationId: put-customers-id-assets-parse
      parameters:
        - $ref: '#/components/parameters/id'
      description: 'Post a CSV file of a single customers assets to this endpoint. Parses and loads Asset DB'
      security:
        - BearerAuth: [ mdr.assets.write ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                CSV File:
                  type: string
                  format: binary

      responses:
        '200':
          description: Valid requerst - No changes made
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AssetOkResponseMessage'

        '202':
          description: Request accepted - List of asset changes by id/field
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AssetAcceptedResponseMessage'

        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'

components:
  schemas:
    jsonApiMeta:
      description: >-
        Non-standard meta-information that can not be represented as an
        attribute or relationship.
      type: object
      additionalProperties: true
      properties:
        count:
          type: number
          readOnly: true

    jsonApiResource:
      description: Resource objects appear in a JSON API document to represent resources.
      type: object
      required:
        - type
        - id
      properties:
        type:
          type: string
        id:
          type: string
        attributes:
          $ref: "#/components/schemas/jsonApiAttributes"
        links:
          $ref: '#/components/schemas/jsonApiResourceLinks'
      additionalProperties: false

    jsonApiPostResource:
      description: A POSTable resource object has an optional id.
      type: object
      required:
        - type
      properties:
        type:
          type: string
        id:
          type: string
        attributes:
          $ref: "#/components/schemas/jsonApiAttributes"
        links:
          $ref: '#/components/schemas/jsonApiResourceLinks'
      additionalProperties: false

    jsonApiResourceLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/jsonApiLink'

    jsonApiLink:
      description: >-
        A link **MUST** be represented as either: a string containing the link's
        URL or a link object.
      oneOf:
        - description: A string containing the link's URL.
          type: string
          format: uri-reference
        - type: object
          required:
            - href
          properties:
            href:
              description: A string containing the link's URL.
              type: string
              format: uri-reference
        - $ref: "#/components/schemas/nullType"

    jsonApiAttributes:
      description: >-
        Members of the attributes object (`attributes`) represent information
        about the resource object in which it's defined.
      type: object
      additionalProperties: false

    jsonApiPagination:
      type: object
      properties:
        self:
          $ref: "#/components/schemas/jsonApiLink"
        first:
          $ref: "#/components/schemas/jsonApiLink"
        last:
          $ref: "#/components/schemas/jsonApiLink"
        prev:
          $ref: "#/components/schemas/jsonApiLink"
        next:
          $ref: "#/components/schemas/jsonApiLink"

    jsonApi:
      description: An object describing the server's implementation
      type: object
      properties:
        version:
          type: string
        meta:
          $ref: "#/components/schemas/jsonApiMeta"
      additionalProperties: false

    nullType:
      description: OAS doesn't allow the null type so use this.
      type: object
      nullable: true
      default: null

    error:
      type: object
      properties:
        statusCode:
          type: string
        message:
          type: string

    CustomerListDataMessage:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/jsonApiMeta"
        links:
          $ref: "#/components/schemas/jsonApiPagination"
        jsonapi:
          $ref: "#/components/schemas/jsonApi"
        data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/jsonApiResource'
              - type: object
                properties:
                  type:
                    type: string
                    enum: ['Customers']
                  attributes:
                    $ref: '#/components/schemas/CustomerData'

    CustomerDataMessage:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/jsonApiMeta"
        links:
          $ref: "#/components/schemas/jsonApiResourceLinks"
        jsonapi:
          $ref: "#/components/schemas/jsonApi"
        data:
          allOf:
            - $ref: "#/components/schemas/jsonApiResource"
            - type: object
              properties:
                type:
                  type: string
                  enum: ['Customers']
                attributes:
                  $ref: '#/components/schemas/CustomerData'

    CustomerData:
      type: object
      required:
        - company_short
        - customer_name
      properties:
        company_short:
          type: string
          example: open
        customer_name:
          type: string
          example: Open Systems

    AssetListDataMessage:
      type: object
      properties:
        meta:
          type: object
          properties:
            result:
              $ref: "#/components/schemas/jsonApiMeta"
        links:
          $ref: "#/components/schemas/jsonApiPagination"
        jsonapi:
          $ref: "#/components/schemas/jsonApi"
        data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/jsonApiResource'
              - type: object
                properties:
                  type:
                    type: string
                    enum: ['Assets']
                  attributes:
                    $ref: '#/components/schemas/AssetData'

    AssetDataMessage:
      type: object
      properties:
        data:
          type: array
          items:
            allOf:
              - type: object
                properties:
                  type:
                    type: string
                  id:
                    type: string
                  attributes:
                    type: object
                    properties:
                      asset_type:
                        type: string
                      assetList:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/AssetData'

    AssetGetResponseMessage:
      type: object
      properties:
        meta:
          type: object
          properties:
            results:
              type: array
              items:
                allOf:
                  - type: object
                    properties:
                      company:
                        type: string
                      asset_type:
                        type: string
                      record_count:
                        type: string
                      added_count:
                        type: string
                      updated_count:
                        type: string
            total_record_count:
              type: string

    AssetOkResponseMessage:
      type: object
      properties:
        meta:
          type: object
          properties:
            result:
              type: array
              items:
                allOf:
                  - type: object
                    properties:
                      200 OK:
                        type: string

    AssetAcceptedResponseMessage:
      type: object
      properties:
        meta:
          type: object
          properties:
            result:
              type: array
              items:
                allOf:
                  - type: object
                    properties:
                      totalAssetCount:
                        type: string
                      addedAssetCount:
                        type: string
                      updatedAssetCount:
                        type: string
                      assetType:
                        type: string
                      updatedAssets:
                        type: array
                        items:
                          allOf:
                            - type: object
                              properties:
                                Database Asset Id:
                                  type: array
                                  items:
                                      properties:
                                        Field that changed 1:
                                          type: string
                                        Field that changed 2:
                                          type: string
                                        Etcetera:
                                          type: string

    AssetData:
      type: object
      required:
        - name
        - type
      properties:
        asset_ name:
          type: string
        asset_type:
          type: string
        asset_tier:
          type: string
        domain:
          type: string
        ip_address:
          type: string
        ip_location:
          type: string
        manufacturer:
          type: string
        os:
          type: string
        comment:
          type: string
        asset_criticality:
          type: object
          properties:
            status:
              type: string
            score:
              type: integer
        source_id:
          type: string

    AssetInfoListDataMessage:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/jsonApiMeta"
        links:
          $ref: "#/components/schemas/jsonApiPagination"
        jsonapi:
          $ref: "#/components/schemas/jsonApi"
        data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/jsonApiResource'
              - type: object
                properties:
                  type:
                    type: string
                    enum: ['Assets-Info']
                  attributes:
                    $ref: '#/components/schemas/AssetsInfoData'

    AssetsInfoPostDataMessage:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/jsonApiMeta"
        links:
          $ref: "#/components/schemas/jsonApiResourceLinks"
        jsonapi:
          $ref: "#/components/schemas/jsonApi"
        data:
          allOf:
            - $ref: "#/components/schemas/jsonApiPostResource"
            - type: object
              properties:
                type:
                  type: string
                  enum: ['Assets-Info']
                attributes:
                  $ref: '#/components/schemas/AssetsInfoData'

    AssetInfoDataMessage:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/jsonApiMeta"
        links:
          $ref: "#/components/schemas/jsonApiResourceLinks"
        jsonapi:
          $ref: "#/components/schemas/jsonApi"
        data:
          allOf:
            - $ref: "#/components/schemas/jsonApiResource"
            - type: object
              properties:
                type:
                  type: string
                  enum: ['Assets']
                attributes:
                  $ref: '#/components/schemas/AssetsInfoData'

    AssetsInfoData:
      type: object
      required:
        - category_name
        - category_info
      properties:
        category_name:
          type: string
        category_info:
          type: array
          items:
            $ref: '#/components/schemas/CategoryInfo'

    CategoryInfo:
      type: object
      required:
        - request_info
        - request_info_answer
      properties:
        request_info:
          type: string
        request_info_answer:
          type: string
        additional_info:
          type: string
        additional_info_example:
          type: string

  parameters:
    include:
      name: include
      in: query
      description: "[list of included related resources](https://jsonapi.org/format/#fetching-includes)"
      required: false
      style: form
      schema:
        type: string
    sort:
      name: sort
      in: query
      description: "[fields to sort by](https://jsonapi.org/format/#fetching-sorting)"
      required: false
      style: form
      schema:
        type: string
    page_size:
      name: "page[size]"
      in: query
      description: size of page for paginated results
      required: false
      schema:
        type: integer
        format: int32
    page_number:
      name: "page[number]"
      in: query
      description: page number of results
      required: false
      schema:
        type: integer
        format: int32
    page_limit:
      name: "page[limit]"
      in: query
      description: limit for this page of paginated results
      required: false
      schema:
        type: integer
        format: int32
    page_offset:
      name: "page[offset]"
      in: query
      description: page offset value
      required: false
      schema:
        type: integer
        format: int32
    fields:
      name: fields
      in: query
      description: "sparse fieldsets: `fields[TYPE]=field1,field2,...`"
      required: false
      style: deepObject
      schema:
        type: string
    filter:
      name: filter
      in: query
      description: |-
        OR condition: filter=active=true^ORactive=false
        AND condition: priority=2^verdict=true_positive
      required: false
      style: deepObject
      schema:
        type: string
    id:
      name: id
      in: path
      description: The short name for the organization
      required: true
      style: simple
      schema:
        type: string
    x-company-short:
      name: X-Company-Short
      in: header
      description: The short name of the company
      required: false
      schema:
        type: string


 # examples:

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  headers:
    Retry-After:
      schema:
        type: integer
      description: Delay retry for given seconds.
    X-RateLimit-Limit:
      schema:
        type: integer
      description: Request limit per hour.
    X-RateLimit-Remaining:
      schema:
        type: integer
      description: The number of requests left for the time window.
    X-RateLimit-Reset:
      schema:
        type: string
        format: date-time
      description: The UTC date/time at which the current rate limit window resets.

  responses:
    '400':
      description: Bad Request
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/error'
    '401':
      description: Unauthorized
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/error'
    '403':
      description: Forbidden
      content:
        'application/problem+json':
          schema:
            $ref: '#/components/schemas/error'
    '404':
      description: Not Found
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/error'
    '409':
      description: Conflict
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/error'
    '415':
      description: Unsupported Media Type
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/error'
    '429':
      description: Too Many Requests
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
        Retry-After:
          $ref: '#/components/headers/Retry-After'
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/error'
    '500':
      description: Internal Server Error
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/error'

    'unknown':
      description: Unknown Error
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/error'
